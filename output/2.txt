/home/diego/anaconda3/envs/cnn-wendy/bin/python /home/diego/projects/DA_ML_Capstone/letsplay_classifier/driver_predictor.py --img-width=64 --img-height=64 --batch-size=32
Loading model.
model_info: {'num_classes': 8, 'img_width': 64, 'img_height': 64}
Done loading model.
tensor([0])
/home/diego/projects/DA_ML_Capstone/wendy_cnn_frames_data/Battle/E_0051_01_15_36.jpg
/home/diego/projects/DA_ML_Capstone/letsplay_classifier/predict.py:77: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.
  inputs = Variable(input_data.cuda(), volatile=True)
Traceback (most recent call last):
  File "/home/diego/projects/DA_ML_Capstone/letsplay_classifier/driver_predictor.py", line 67, in <module>
    loss = criterion(preds, labels)
  File "/home/diego/anaconda3/envs/cnn-wendy/lib/python3.8/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/diego/anaconda3/envs/cnn-wendy/lib/python3.8/site-packages/torch/nn/modules/loss.py", line 947, in forward
    return F.cross_entropy(input, target, weight=self.weight,
  File "/home/diego/anaconda3/envs/cnn-wendy/lib/python3.8/site-packages/torch/nn/functional.py", line 2422, in cross_entropy
    return nll_loss(log_softmax(input, 1), target, weight, None, ignore_index, None, reduction)
  File "/home/diego/anaconda3/envs/cnn-wendy/lib/python3.8/site-packages/torch/nn/functional.py", line 1591, in log_softmax
    ret = input.log_softmax(dim)
IndexError: Dimension out of range (expected to be in range of [-1, 0], but got 1)
torch.Size([1, 3, 64, 64])
Predicting class labels for the input data...
torch.Size([1, 3, 64, 64])
torch.Size([1, 3, 64, 64])
tensor([[16.0085, -4.2771,  4.6065, -1.7135, -3.9400, -3.9598, -4.4313, -4.1342]])
tensor([0])
tensor([0])
torch.Size([1])

Process finished with exit code 1
